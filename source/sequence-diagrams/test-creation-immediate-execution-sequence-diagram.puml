@startuml
!pragma teoz true

/'Defines the protocol when a user submits a request to create and execute a test immediately'/
/'author: Luvai Cutlerywala <luvaidc@gmail.com>'/

/'Define the actors and participants.'/
actor User as user

box UI
    participant "Web UI" as web_ui
    participant "Mobile App" as mobile_app
end box

box Backend
    control "Service Manager" as service_manager
    box Listener
        queue "Listener Queue" as listener_queue
        participant "Listener" as listener
    end box
    participant "Scheduler" as scheduler
    participant "Deliverability Test" as deliverability_test
    participant "Deliverability Test Log" as deliverability_test_log
    participant "Messaging Service" as messenger
    participant "Deliverability Test Phones" as deliverability_test_phones
    participant "Report Generation Service" as report_generator
end box

box Database
    database deliverability_test as dt
    database deliverability_test_logs as dtl
    database deliverability_test_phones as dtp
end box

box "Broker API"
    participant "Bandwidth API" as broker_api
end box

user -> web_ui: Create test with {test_metadata}, to be run now.
web_ui -> service_manager: Create test with {test_metadata}, to be run now.
service_manager -> deliverability_test: Create test with {test_metadata}.
activate deliverability_test
deliverability_test -> dt: Insert record with {test_id, test_metadata}.
deliverability_test --> service_manager: Test created, {test_id}.
deactivate deliverability_test
service_manager -> deliverability_test_log: Initiate test with {test_id, test_metadata}.
loop Insert initiated test records for each phone number in test
activate deliverability_test_log
deliverability_test_log -> dtl: Insert record with {test_log_id, test_id, test_metadata}.
deliverability_test_log --> service_manager: Test initiated, {test_log_id}.
deactivate deliverability_test_log
service_manager -> messenger: executeTest()
activate messenger
messenger -> broker_api: Send message with message data
broker_api-->messenger:Message sent,(message_sent_webhook)
messenger --> service_manager: Messages sent successfully.
deactivate messenger
service_manager -> deliverability_test_log: Update test {test_log_id} to sent.
activate deliverability_test_log
deliverability_test_log -> dtl: Update test with {test_log_id} to sent.
deliverability_test_log --> service_manager: Test updated.
deactivate deliverability_test_log
activate messenger
broker_api --> messenger: Messages delivered, {message_delivered_webhook}.
messenger --> service_manager: Messages delivered successfully.
deactivate messenger
service_manager -> deliverability_test_log: Update test {test_log_id} to delivered.
activate deliverability_test_log
deliverability_test_log -> dtl: Update test with {test_log_id} to delivered.
deliverability_test_log --> service_manager: Test updated.
deactivate deliverability_test_log
service_manager -> service_manager: End test.
end
@enduml
